AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'sam-app

  Sample SAM Template for sam-app

  '
Globals:
  Function:
    Timeout: 3
Resources:
  lambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: '*'
        PolicyName: lambda1Logging
      - PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Action:
            - health:DescribeEventTypes
            Effect: Allow
            Resource: '*'
        PolicyName: lambda1Health
  eventTypeCodesTypeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: eventTypeCodesTypeFunction
      Handler: app.lambda_handler
      Runtime: python3.9
      Role:
        Fn::GetAtt:
        - lambdaIAMRole
        - Arn
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /eventTypeCodesType
            Method: get
    Metadata:
      SamResourceId: eventTypeCodesTypeFunction
Outputs:
  eventTypeCodesTypeApi:
    Description: API Gateway endpoint URL for Prod stage for eventTypeCodesType function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/eventTypeCodesType/
  eventTypeCodesTypeFunction:
    Description: eventTypeCodesType Function ARN
    Value:
      Fn::GetAtt:
      - eventTypeCodesTypeFunction
      - Arn
  eventTypeCodesTypeFunctionIamRole:
    Description: Implicit IAM Role created for eventTypeCodesType Function
    Value:
      Fn::GetAtt:
      - lambdaIAMRole
      - Arn
